# run program
run <args>

# set args for sebsequent runs
set args <args>

# load symbol file
symbol-file <fle_name>

# lisf currently visible functions in the current scope
info functions

# list local variables
info locals

# list currently visible variables in the current scope
info variables

# list variables visible in the scope of <function_name>
info scope <function_name>

# list files being debugged
info file

# list source (code) files referenced
info sources

# breakpoints
break <function_name>
break <filename>:<line>
break <filename>:<function_name>
break *<address>
disable <breakpoint_number>
enable <breakpoint_number>
delete <breakpoint_number>
clear <same_as_creating>

# delete all
delete

# list breakpoints
info b[reakpoints]
# runtime info

# set breakpoint condition
condition <breakpoint_number> <condition>
# example
condition 1 counter == 2

# show register values
info registers

# show expression value
print <expression>
print <function_name>

# show memory location content
x /<format> <expression>
# example
x /s argv[0]
x /i $eip
x /20x <address>
x /5i main+27

# disassemble function
disas[semble] <function_name>

# control

# go to the next line of code, including subroutines
step <count>
# go to the next instruction, including subroutines
stepi <count>
# go to the next line of code, jumping over subroutine calls
next <count>
# go to the next instruction, jumping over subroutine calls
nexti <count>

# change

# set value in memory and registers
set {<type>} <address_expression> = <value>
set <variable_name> = <value>
set $<debug_variable_name> = <value>
set $<register> = value
# examples
set {char} 0xfe00a1234 = 'B'
set {char} argv[1] = 'T'
set {char} (argv[1]+3) = 'T'
set $eax = 0x40

# call functions
call <call_expression>
# example
call strcpy($var1, argv[2])

# armel images
https://people.debian.org/~aurel32/qemu/armel/

